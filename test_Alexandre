import numpy as np
import random
import numpy.random as rd


alpha=float(input("Entrer la proportion de graines dispersées: "))
N=int(input("Entrer le nombre de graines par plante: "))
L=int(input("Entrer longueur de la grille: "))



class plants:
    """
    Classe d'objects à deux attribus, la qualité q entre 0 et 1 et une liste de deux entiers pour les positions des plantes dans la grille.
    """
    def __init__(self,quality,position):
        self.quality=quality
        self.position=position
    
    def get_position(self):
        return self.position
    
    def get_quality(self):
        return self.quality
    
    def quality(self,delta):
        self.quality=(1-delta)*self.quality
    
    def dispersing(self,):
        return  alpha*N 



def grille_inter(L): 
    """
    créer un tableau de list L*L.
    """        
    g=[]
    for i in np.arange(L):
        x=[[]]
        j=0
        while j<(L-1):
            x.append([])
            j+=1
        g.append(x)
    return g



def implantation_disp(p,L,g):
    
        nb_g=p.dispersing()# récupère le nombre de graines dispersées

        for i in np.arange(nb_g):
           x= random.randint(0, L-1) #choisis aléatoirement la ligne sur la grille
           y= random.randint(0, L-1) #choisis aléatoirement la colonne sur la grille
           j=rd.binomial(1, 0.4,) #simule la proba de s'installé sur une case, attention la proba est fixé c'est à modifié.

           
           if j==1:
                g[x][y].append(1) #si la graine s'installe alors on place un 1 sur la case correspondante, il peut y avoir plusieurs 1 sur une case

        return g



p1=plants(1,[3,4])

g=implantation_disp(p1,L,grille_inter(L))
print(g)
print( )
for i in range(len(g)):
    for j in range(len(g[i])):
        print(g[i][j], end=' ')
    print( )
    
